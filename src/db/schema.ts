
import { pgTable, varchar, text, integer, boolean, jsonb, timestamp } from "drizzle-orm/pg-core";

// Branch Table
export const branches = pgTable("branches", {
  id: varchar("id").primaryKey(),
  role: text("role"),
  bannerUrl: text("banner_url"),
  branchName: text("branch_name"),
  brandName: text("brand_name"),
  bannerBackgroundHexColour: text("banner_background_hex_colour"),
  logoUrl: text("logo_url"),
  legalName: text("legal_name"),
  phone: text("phone"),
  canonicalUrl: text("canonical_url").array(),
  rentalPartnership: jsonb("rental_partnership"),
  residentialPartnership: jsonb("residential_partnership"),
  tmId: text("tm_id"),
  detail: jsonb("detail"),
  stats: jsonb("stats"),
});

// PropertyDetails Table
export const propertyDetails = pgTable("property_details", {
  id: varchar("id").primaryKey(),
  address: text("address"),
  displayAddress: text("display_address"),
  coverImageUrl: text("cover_image_url"),
  coverImageUrlSource: text("cover_image_url_source"),
  listingImages: text("listing_images").array(),
  googleStreetViewUrl: text("google_street_view_url"),
  numBathrooms: integer("num_bathrooms"),
  numBedrooms: integer("num_bedrooms"),
  numCarSpaces: integer("num_car_spaces"),
  latestBedrooms: text("latest_bedrooms"),
  latestBathrooms: text("latest_bathrooms"),
  latestCarSpaces: text("latest_car_spaces"),
  latestSource: text("latest_source"),
  headline: text("headline"),
  estimatedValueRevisionDate: timestamp("estimated_value_revision_date"),
  displayEstimatedLowerValueShort: text("display_estimated_lower_value_short"),
  displayEstimatedUpperValueShort: text("display_estimated_upper_value_short"),
  displayEstimatedValueShort: text("display_estimated_value_short"),
  estimatedRentalRevisionDate: timestamp("estimated_rental_revision_date"),
  displayEstimatedRentalLowerValueShort: text("display_estimated_rental_lower_value_short"),
  displayEstimatedRentalUpperValueShort: text("display_estimated_rental_upper_value_short"),
  estimatedRentalYield: text("estimated_rental_yield"),
  capitalValue: integer("capital_value"),
  improvementValue: integer("improvement_value"),
  landValue: integer("land_value"),
  displayCapitalValueShort: text("display_capital_value_short"),
  displayImprovementValueShort: text("display_improvement_value_short"),
  displayLandValueShort: text("display_land_value_short"),
  currentRevisionDate: timestamp("current_revision_date"),
  firstGasEnabled: boolean("first_gas_enabled"),
  flags: jsonb("flags"),
  cityId: integer("city_id"),
  suburbId: integer("suburb_id"),
  tmSuburbId: integer("tm_suburb_id"),
  tmRegionId: integer("tm_region_id"),
  tmDistrictId: integer("tm_district_id"),
  unitIdentifier: jsonb("unit_identifier"),
  streetNumber: text("street_number"),
  streetAlpha: jsonb("street_alpha"),
  street: text("street"),
  suburb: text("suburb"),
  city: text("city"),
  ta: text("ta"),
  propertyId: varchar("property_id"),
  decadeBuilt: integer("decade_built"),
  buildingConstruction: text("building_construction"),
  buildingCondition: text("building_condition"),
  floorArea: integer("floor_area"),
  landArea: integer("land_area"),
  hasDeck: boolean("has_deck"),
  viewType: text("view_type"),
  viewScope: text("view_scope"),
  zone: jsonb("zone"),
  trees: jsonb("trees"),
  contour: text("contour"),
  massTotalLivingArea: jsonb("mass_total_living_area"),
  legalDescription: text("legal_description"),
  categoryCode: text("category_code"),
  certificateOfTitle: text("certificate_of_title"),
  valuationReferenceNumber: text("valuation_reference_number"),
  landUse: text("land_use"),
  estimatedLowerValue: integer("estimated_lower_value"),
  estimatedUpperValue: integer("estimated_upper_value"),
  estimatedValue: integer("estimated_value"),
  estimatedRentalLowerValue: integer("estimated_rental_lower_value"),
  estimatedRentalUpperValue: integer("estimated_rental_upper_value"),
  bathEstimate: integer("bath_estimate"),
  bathEstimateDate: timestamp("bath_estimate_date"),
  bedEstimate: integer("bed_estimate"),
  bedEstimateDate: timestamp("bed_estimate_date"),
  suburbName: text("suburb_name"),
  cityName: text("city_name"),
  claimId: jsonb("claim_id"),
  claimed: boolean("claimed"),
  userEvents: jsonb("user_events"),
  displayEstimatedLowerValue: text("display_estimated_lower_value"),
  displayEstimatedUpperValue: text("display_estimated_upper_value"),
  displayEstimatedValue: text("display_estimated_value"),
  displayEstimatedRentalLowerValue: text("display_estimated_rental_lower_value"),
  displayEstimatedRentalUpperValue: text("display_estimated_rental_upper_value"),
  buildingSiteCoverage: jsonb("building_site_coverage"),
  massGarageFreestanding: jsonb("mass_garage_freestanding"),
  massGarageUnderRoof: jsonb("mass_garage_under_roof"),
  solar: jsonb("solar"),
  capitalValueDigit: text("capital_value_digit"),
  improvementValueDigit: text("improvement_value_digit"),
  landValueDigit: text("land_value_digit"),
  displayCapitalValue: text("display_capital_value"),
  displayImprovementValue: text("display_improvement_value"),
  displayLandValue: text("display_land_value"),
  imageUrls: jsonb("image_urls"),
  images: jsonb("images"),
  videoUrls: jsonb("video_urls"),
  coreLogicId: integer("core_logic_id"),
});

// Agent Table
export const agents = pgTable("agents", {
  id: varchar("id").primaryKey(),
  name: text("name"),
  role: text("role"),
  suburbExpert: boolean("suburb_expert"),
  suburbExpertLocation: text("suburb_expert_location"),
  profileImageUrl: text("profile_image_url"),
  officePhone: text("office_phone"),
  mobilePhone: text("mobile_phone"),
  branchId: varchar("branch_id"),
  team: boolean("team"),
  canonicalUrl: text("canonical_url").array(),
  detail: jsonb("detail"),
  stats: jsonb("stats"),
  saleStats: jsonb("sale_stats"),
  testimonials: jsonb("testimonials"),
  tmMemberId: text("tm_member_id"),
});

// Point Table
export const points = pgTable("points", {
  id: varchar("id").primaryKey(),
  lat: integer("lat"),
  long: integer("long"),
});

// Card Table
export const cards = pgTable("cards", {
  id: varchar("id").primaryKey(),
  itemId: text("item_id"),
  propertyId: varchar("property_id"),
  listingId: text("listing_id"),
  tmIds: text("tm_ids").array(),
  branchId: varchar("branch_id"),
  state: integer("state"),
  salesCount: integer("sales_count"),
  propertyDetails: jsonb("property_details"),
  point: jsonb("point"),
  displayPrice: text("display_price"),
  price: jsonb("price"),
  date: timestamp("date"),
  featuredAt: timestamp("featured_at"),
  featuredPlan: integer("featured_plan"),
  agentId: varchar("agent_id"),
  propertyEstimateHistory: jsonb("property_estimate_history")
});

// Users Table
export const users = pgTable("users", {
  email: varchar("email").primaryKey().unique(),
  hashedPassword: text("hashed_password"),
  isAdmin: boolean("is_admin"),
});